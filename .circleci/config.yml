version: 2.1

orbs:
  node: circleci/node@3.0.0

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.8-node

    steps:
      - checkout
      - node/install-packages:
          override-ci-command: make install

      - run:
          name: Build
          command: make build

      - run:
          name: Run Tests
          command: make test

      - run:
          name: Run Lints
          command: make lint

      - run:
          name: Build docs
          command: SITE_PREFIX=/0/artifacts/docs make docs

      - run:
          name: Preparing artifacts
          command: make artifact

      - store_artifacts:
          path: ./artifacts

  docs-publish:
    docker:
      - image: circleci/python:3.8-node

    steps:
      - checkout

      - node/install-packages:
          override-ci-command: make install

      - run:
          name: Build docs
          command: |
            SITE_PREFIX="/${CIRCLE_PROJECT_REPONAME}" make docs
            # disable Jekyll builds
            touch docs/out/.nojekyll

      - add_ssh_keys:
          fingerprints:
            - "c3:70:e7:fe:ee:b2:18:a5:66:65:cb:0d:43:37:c6:ae"

      - run:
          name: Deploy docs to gh-pages
          command: |
            # Set up credentials
            git config user.email "ci-build@nimbus.mozilla.org"
            git config user.name "ci-build"
            cd docs
            npm run publish

  packages-publish:
    docker:
      - image: circleci/python:3.8-node

    steps:
      - checkout

      - node/install-packages:
          override-ci-command: make install

      - run:
          name: NPM Authentication
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc

      - run:
          name: Publish
          command: |
            make pack
            npm publish
            cd python
            poetry publish --username __token__ --password "${PYPI_TOKEN}"

workflows:
  build-and-test:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - docs-publish:
          filters:
            branches:
              only: main
            tags:
              only: /.*/
      - packages-publish:
          requires:
            - build-and-test
            - docs-publish
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
